# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" "r8169" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  # Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  networking.hostName = "b660-i5-13600";
  networking.useDHCP = lib.mkDefault false;

  systemd.network.enable = true;
  systemd.network.networks."10-enp3s0" = {
    matchConfig.Name = "enp3s0";
    networkConfig = {
      DHCP = "yes";
      IPv6AcceptRA = false;  # Accept IPv6 router advertisements for IPv6 addresses
    };
  };

  boot.kernelParams = [ "ip=dhcp" ];
  boot.initrd = {
    systemd.users.root.shell = "/bin/cryptsetup-askpass";
    network = {
      enable = true;
      ssh = {
        enable = true;
        port = 22;
        authorizedKeys = [ "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOTvwNAE0ZUIgEZRlZqw48o5Sw8gZuCPaYUPUHEp/vtg sebastiaan@linux.com" ];
        hostKeys = [ "/etc/secrets/initrd/ssh_host_rsa_key"];
      };
    };
  };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/6492ebba-9a1b-497f-8afd-c173e7198a19";

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/00bfc046-7653-4734-ada2-a4ae661f9c71";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/F68E-B72F";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/61544193-b06c-485e-aa2e-00d47edad94a"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.interfaces.enp3s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  systemd.services.enable-l1-aspm = {
    description = "Enable L1 ASPM for PCI device 0000:03:00.0";
    wantedBy = [ "multi-user.target" ];
    after = [ "sysinit.target" ];
    script = ''
      echo 1 > /sys/bus/pci/devices/0000:03:00.0/link/l1_aspm
    '';
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
    };
  };
}
